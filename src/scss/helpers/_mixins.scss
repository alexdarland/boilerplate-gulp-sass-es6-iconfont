@mixin respond-to($media) {
  @if $media == xxs-only {
    @media (max-width: $screen-xxs-max) {
      @content;
    }
  } @else if $media == xs-only {
    @media (min-width: $screen-xs-min) and (max-width: $screen-xs-max) {
      @content;
    }
  } @else if $media == xs-up {
    @media (min-width: $screen-xs-min) {
      @content;
    }
  } @else if $media == xs-down {
    @media (max-width: $screen-xs-max) {
      @content;
    }
  } @else if $media == sm-only {
    @media (min-width: $screen-sm-min) and (max-width: $screen-sm-max) {
      @content;
    }
  } @else if $media == sm-up {
    @media (min-width: $screen-sm-min) {
      @content;
    }
  } @else if $media == sm-down {
    @media (max-width: $screen-sm-max) {
      @content;
    }
  } @else if $media == md-only {
    @media (min-width: $screen-md-min) and (max-width: $screen-md-max) {
      @content;
    }
  } @else if $media == md-up {
    @media (min-width: $screen-md-min) {
      @content;
    }
  } @else if $media == md-down {
    @media (max-width: $screen-md-max) {
      @content;
    }
  } @else if $media == lg-only {
    @media (min-width: $screen-lg-min) {
      @content;
    }
  } @else if $media == wide-screen {
    @media (min-width: $w-screen-wide) {
      @content;
    }
  } @else if $media == mobile-modal {
    @media (max-width: $screen-xs-max) {
      .touchevents & {
        @content;
      }
    }
  }
}

@mixin respond-between($media1, $media2) {

  @if $media1 != $media2 {
    @if (map_get($breakpoints, $media1) < map_get($breakpoints, $media2)) {
      @media (min-width: map_get($breakpointsMin, $media1)) and (max-width: map_get($breakpointsMax, $media2)) {
        @content;
      }
    } @else {
      @media (min-width: map_get($breakpointsMin, $media2)) and (max-width: map_get($breakpointsMax, $media1)) {
        @content;
      }
    }
  }

}

@mixin respond-to-min($screenWidth) {
  @media (min-width: $screenWidth) {
    @content;
  }
}

@mixin respond-to-max($screenWidth) {
  @media (max-width: $screenWidth) {
    @content;
  }
}

@mixin respond-to-height-min($screenHeight) {
  @media (min-height: $screenHeight) {
    @content;
  }
}

@mixin respond-to-height-max($screenHeight) {
  @media (max-height: $screenHeight) {
    @content;
  }
}

@mixin list-style-none() {
  list-style: none;
  padding: 0;
}

@mixin ellipsis() {
  max-width: 100%;
  text-overflow: ellipsis;
  white-space: normal;
  overflow: hidden;
}

@mixin ellipsis-nowrap() {
  max-width: 100%;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

@mixin clear-fix() {
  &:after {
    content: "";
    display: block;
    clear: both;
  }
}

@mixin btn-style-none() {
  appearance: none;
  border: 0;
  background-color: transparent;
  padding: 0;
}